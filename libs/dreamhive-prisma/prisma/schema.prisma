// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  USER_ROLE_DREAMER
  USER_ROLE_EMPLOYER
  USER_ROLE_ADMIN
}

type Address {
  street String
  city   String
  state  String
  zip    String
}

model EnumCollection {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique
  codeType String
  displayText String
}
model Dreamer {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  role USER_ROLE @default(USER_ROLE_DREAMER)
  appUser AppUser?
}

model Employer { 
  id String @id @default(auto()) @map("_id") @db.ObjectId
  role USER_ROLE @default(USER_ROLE_EMPLOYER)
  appUser AppUser?
}

model AppUser {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  isSuperAdmin Boolean @default(false)
  person Person?
  email String @unique
  password String
  dreamer Dreamer? @relation(fields: [userRoleId], references: [id])
  employer Employer? @relation(fields: [userRoleId], references: [id])
  userRoleId String @unique
  createdAt DateTime @default(now())
  updatedAt String?
  deletedAt String?
}

model Person {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  middleName String?
  lastName String
  appUser AppUser @relation(fields: [appUserId], references: [id])
  appUserId String @unique @db.ObjectId
  address Address?
  profileSrc String?
}


